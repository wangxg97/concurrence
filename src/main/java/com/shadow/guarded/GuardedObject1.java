package com.shadow.guarded;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class GuardedObject1 {

    private Object lock=new Object();

    private Object response;

    /**
     * ??????? response ????????response????????
     * @return
     */
    public  Object getResponse(long millis) throws InterruptedException {
        synchronized (lock){
            //??????
            long begin=System.currentTimeMillis();
            //????????????????????0
            long timePassed=0;
//            System.out.println("???????response ????null??wait");
            log.debug("???????response ????null??wait");
            while (response==null){
                //???????????
                long waitTime=millis-timePassed;
                if (waitTime<=0){
                    log.debug("????????????while ??????");
                    break;
                }
                lock.wait(waitTime);
                //??????????????????????μ?????? ?????н??????????
                //????????????????millis????????????millis ???????????
                timePassed=System.currentTimeMillis()-begin;
                log.debug("??????:{}",timePassed);
            }
        }
        return response;
    }

    /**
     * t1 ??response?????
     * @param response
     */
    public void setResponse(Object response){
        synchronized (lock){
            this.response=response;
            //?????????????????
            lock.notifyAll();
        }
    }
}
